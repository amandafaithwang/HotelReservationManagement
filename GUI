"""This file contains the code for creating Tkinter GUI elements, such as windows, forms, buttons, etc."""
from tkinter import ttk, messagebox  # ttk is the themed tk module for widgets that look like the OS, and messagebox is for displaying alerts
from tkinter import Tk


class LoginWindow:  # Class for the Log In Window to enter username and password to access the main GUI
    def __init__(self, master):
        self.master = master
        self.master.title("Log In to the Hotel Reservation Management System")

        # Calculate the coordinates for the top left corner of the window to center it
        window_width = 400
        window_height = 300
        screen_width = self.master.winfo_screenwidth()
        screen_height = self.master.winfo_screenheight()
        position_top = int(screen_height / 2 - window_height / 2)  # Calculate the top position
        position_right = int(screen_width / 2 - window_width / 2)  # Calculate the right position

        # Set the geometry of the window using the calculated coordinates at the center of the screen
        self.master.geometry(f"{window_width}x{window_height}+{position_right}+{position_top}")

        self.label_username = ttk.Label(master, text="Username:")
        self.label_username.pack()

        self.entry_username = ttk.Entry(master)
        self.entry_username.pack()

        self.label_password = ttk.Label(master, text="Password:")
        self.label_password.pack()

        self.entry_password = ttk.Entry(master, show="*")  # Show * instead of the actual password to resemble a password field
        self.entry_password.pack()

        self.button = ttk.Button(master, text="Log In", command=self.login)
        self.button.pack()

    def login(self):
        username = self.entry_username.get()
        password = self.entry_password.get()

        print("Username: " + username)
        print("Password: " + password)

        # Check if username and password are alphanumeric
        if username.isalnum() and password.isalnum():
            messagebox.showinfo("Login Successful", "Welcome to the Hotel Reservation Management System!")
            print("Login successful")
            self.master.destroy()  # Close the Log In Window after successful login and open the main window
            root = Tk()
            my_gui = GUI(root)  # Open the main GUI  after successful login
            root.mainloop()  # Start the main GUI
        else:
            messagebox.showinfo("Login failed", "Invalid username or password. Please try again.")


class Dashboard:
    def __init__(self, master):
        self.master = master
        # Initialize dashboard widgets here


    def update_data(self):
        # Update dashboard data here
        pass  # TODO: Edit this method to update the dashboard data


class GUI:
    """ Responsible for the general GUI set up and layout """
    def __init__(self, master):
        self.master = master
        self.dashboard = Dashboard(master)  # Initialize the dashboard widgets and data
        master.title("CCT211: Project 2: Hotel Reservation Management System")
        master.geometry("1000x750")  # Sets the size to 1000x750 pixels only after Escape key is pressed, leaving the fullscreen mode

        # Set the window to fullscreen
        self.fullscreen = False
        self.toggle_fullscreen()  # Call the function to toggle fullscreen

        # Bind Escape key to toggle fullscreen mode
        self.master.bind("<Escape>", self.toggle_fullscreen)

        # Create the main menu (tabs) for the GUI using ttk.Notebook which will hold the tabs
        self.notebook = ttk.Notebook(master)

        # Frames for each tab
        self.dashboard_frame = ttk.Frame(self.notebook)
        self.room_frame = ttk.Frame(self.notebook)
        self.bookings_frame = ttk.Frame(self.notebook)

        # Add the tabs to the notebook
        self.notebook.add(self.dashboard_frame, text="Dashboard")  # Add the dashboard tab
        self.notebook.add(self.room_frame, text="Rooms")  # Add the rooms tab
        self.notebook.add(self.bookings_frame, text="Bookings")  # Add the bookings tab

        # Pack the notebook
        self.notebook.pack(expand=True, fill='both')

    # Function to toggle fullscreen
    def toggle_fullscreen(self, event=None):
        self.fullscreen = not self.fullscreen
        self.master.attributes("-fullscreen", self.fullscreen)


root = Tk()
login_window = LoginWindow(root)

root.mainloop()
